---
type Props = {
  data: {
    siteTitleFirst: string;
    siteTitleSecond: string;
    siteDescription: string;
  };
};

const { data } = Astro.props;
---

<>
  <div class="text-7xl sm:text-8xl lg:text-9xl xl:text-10xl font-bold tracking-tightest text-center leading-none">
    {
      data.siteTitleFirst.split("").map((char) => {
        if (char === char.toUpperCase() && char.match(/[A-Z]/)) {
          return (
            <span id="letter" data-text={char}>
              {char}
            </span>
          );
        } else {
          return char;
        }
      })
    }
  </div>
  <div class="text-7xl sm:text-8xl lg:text-9xl xl:text-10xl font-bold tracking-tightest text-center leading-none">
    {
      data.siteTitleSecond.split("").map((char) => {
        if (char === char.toUpperCase() && char.match(/[A-Z]/)) {
          return (
            <span id="letter" data-text={char}>
              {char}
            </span>
          );
        } else {
          return char;
        }
      })
    }
  </div>
  <h1 class="mt-24 text-3xl sm:text-4xl font-bold lg:w-1/2 text-balance text-center lg:text-left">{data.siteDescription}</h1>
</>

<style>
  #letter {
    --color: #fff;
    position: relative;
    color: transparent;
  }

  #letter::after {
    content: attr(data-text);
    position: absolute;
    inset: 0;
    z-index: 69;
    -webkit-text-stroke: 1px var(--color);
    line-height: 0.9;
  }
</style>

<script>
  import gsap from "gsap";

  const letters = document.querySelectorAll("#letter") as NodeListOf<HTMLElement>;
  setTimeout(() => {
    gsap.to(
      {},
      {
        duration: 10,
        onUpdate: function () {
          const progress = this.progress();
          letters.forEach((letter) => {
            letter.style.color = `hsla(0, 0%, 100%, ${progress})`;
          });
        },
      }
    );
  }, 1000);
</script>
